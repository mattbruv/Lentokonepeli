// These all should come _completely_ autogenerated, but current setup does not handle exporting enums well.

import { MapPiece as MapPieceType } from "dogfight-types/MapPiece";
import { Team } from "dogfight-types/Team";

export const MapPiece = {
    Air: ".",
    GroundNormal: "#",
    GroundDesert: "_",
    WaterNormalLeft: "/",
    WaterNormalRight: "\\",
    WaterDesertLeft: "(",
    WaterDesertRight: ")",
    HillNormal: "H",
    HillDesert: "S",
    CoastNormalRight: ">",
    CoastNormalLeft: "<",
    CoastDesertLeft: "[",
    CoastDesertRight: "]",
    RunwayCentralsLeft: "L",
    RunwayCentralsRight: "R",
    RunwayAlliesLeft: "l",
    RunwayAlliesRight: "r",
    PalmTreeLeft: "p",
    PalmTreeRight: "P",
    ControlTowerLeft: "t",
    ControlTowerRight: "T",
    DesertTowerLeft: "d",
    DesertTowerRight: "D",
    FlagAllies: "f",
    FlagCentrals: "F",
    BunkerCentrals: "I",
    BunkerAllies: "i",
} as const satisfies Record<MapPieceType, string>;
export type MapPiece = (typeof MapPiece)[keyof typeof MapPiece];

export const TimeWinnerDefinitions = {
    centrals: "Centrals",
    allies: "Allies",
    no: "None",
} satisfies Record<Lowercase<Team> | "no", string>;

export type TimeWinner = keyof typeof TimeWinnerDefinitions;

export const KNOWN_MAP_PIECE_CHARACTERS = Object.values(MapPiece).sort((a, b) => b.length - a.length) as MapPiece[];
export const KNOWN_TIME_WINNERS = Object.keys(TimeWinnerDefinitions) as TimeWinner[];
